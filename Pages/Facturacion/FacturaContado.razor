@page "/factura/paga"
@using FactuSystem.Data.Response;
@inject IJSRuntime JSRuntime
@attribute [Authorize]

<PageTitle>Factura</PageTitle>

<style>
    /* Estilo para el contenedor de la tabla */
    .table-container {
        margin-top: 20px;
    }
    /* Estilo para el cuerpo de la tarjeta */
    .card-body {
        padding: 20px;
    }

    /* Estilo para centrar el texto en las celdas de la tabla */
    .table th, .table td {
        text-align: center;
    }

    .titulo {
        background-image: linear-gradient(180deg, rgb(0, 29, 82) 0%, rgb(0, 0, 0) 70%);
        color: #ffffff; /* Texto blanco */
        text-align: center; /* Centrar texto */
        padding: 10px; /* AÃ±adir espacio alrededor del texto */
    }
</style>

@if(ShowDetails)
{
    <div class="row">
        <div class="col-12">
            <h1 class="titulo">@TituloForm</h1>
        </div>
    </div>

    <!-- Mostrar los detalles de la factura seleccionada -->
    <div class="table-container">
        <div class="card col-12">
            <div class="card-body">
                <div class="row">
                    <div class="col-10">
                        <h5><b>Fecha:</b> @SelectedFactura.Fecha.ToShortDateString()</h5>
                        <h5><b>Cliente:</b> @SelectedFactura.Cliente.Nombre @SelectedFactura.Cliente.Apellidos</h5>
                        <details class="d-print-none">
                            <small><strong>Cedula:</strong>@FormatCustomerId(SelectedFactura.Cliente.Cedula)</small>
                            <small><strong>Celular:</strong>@FormatPhoneNumber(SelectedFactura.Cliente.Telefono)</small>
                            <small><strong>DirecciÃ³n:</strong>@SelectedFactura.Cliente.Direccion</small>
                        </details>
                    </div>
                    <div class="col text-end">
                        <button class="btn btn-outline-danger d-print-none"
                            @onclick="Back">
                            <span class="oi oi-arrow-left"></span>
                        </button>
                        <button class="btn btn-outline-primary d-print-none" @onclick="PrintPageAsync">
                            <span class="oi oi-print"></span>
                        </button>
                    </div>
                </div>
                <!-- Mostrar detalles de la factura seleccionada -->
                <div class="row-12 mt-2">
                    <table class="table table-bordered table-striped">
                        <thead class="table" style="background-image: linear-gradient(180deg, rgb(0, 29, 82) 0%, rgb(0, 0, 0) 70%); color: #ffffff;">
                            <tr>
                                <th scope="col">Cantidad</th>
                                <th scope="col">DescripciÃ³n</th>
                                <th scope="col">Precio</th>
                                <th scope="col">ITBIS</th>
                                <th scope="col">Descuento</th>
                                <th scope="col">Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var detalle in FacturaDetalles)
                            {
                                <tr>
                                    <td>@detalle.Cantidad</td>
                                    <td>@detalle.Producto.Nombre</td>
                                    <td>$@($"{(detalle.Precio - detalle.PrecioITBIS):N2}")</td>
                                    <td>
                                        <span style="white-space: nowrap;">
                                            $@($"{(detalle.PrecioITBIS):N2}")
                                        </span>
                                    </td>
                                    <td>$@detalle.TotalDesc.ToString("N2")</td>
                                    <td>$@($"{(detalle.SubTotal - detalle.TotalDesc):N2}")</td>
                                </tr>
                            }
                            <tr>
                                <td colspan="4"></td>
                                <td><b>SubTotal:</b></td>
                                <td>$@FacturaDetalles.Sum(c => c.SubTotal - c.ITBIS).ToString("N2")</td>
                            </tr>
                            <tr>
                                <td colspan="4"></td>
                                <td><b>ITBIS:</b></td>
                                <td>$@FacturaDetalles.Sum(c => c.ITBIS).ToString("N2")</td>
                            </tr>
                            <tr>
                                <td colspan="4"></td>
                                <td><b>Descuento:</b></td>
                                <td>$@FacturaDetalles.Sum(c => c.TotalDesc).ToString("N2")</td>
                            </tr>
                            <tr>
                                <td colspan="4"></td>
                                <td><b>Importe:</b></td>
                                <td><strong>$@FacturaDetalles.Sum(c => c.SubTotal - c.TotalDesc).ToString("N2")</strong></td>
                            </tr>
                        </tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>
}
else if(Facturas != null)
{
    <div class="row">
        <div class="col-12">
            <h1 class="titulo">@TituloForm</h1>
        </div>
    </div>

    <div class="modal" style="display: @(detailsPago ? "block" : "none"); background-color: rgba(0, 0, 0, 0.5);" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-dark text-white">
                    <h5 class="modal-title"><b>Detalles de los Pagos</b></h5>
                    <button type="button" class="close btn btn-danger d-print-none" data-dismiss="modal" aria-label="Close" @onclick="CloseDetailsPago">
                        <span aria-hidden="true" class="oi oi-x"></span>
                    </button>
                </div>
                <div class="modal-body">
                    @if(FacturaSinPagos)
                    {
                        <div class="alert alert-success" role="alert">
                            <h4 class="alert-heading">Â¡Aviso!</h4>
                            <p>Este cliente pago al contado ðŸ˜Ž.</p>
                            <hr>
                            <p class="mb-0">Por favor, asegÃºrese de conservar este cliente. Â¡Gracias!
                            </p>
                        </div>
                    }
                    else{
                        <table class="table table-hover">
                            <thead class="table" style="background-image: linear-gradient(180deg, rgb(0, 29, 82) 0%, rgb(0, 0, 0) 70%); color: #ffffff;">
                                <tr>
                                    <th>FacturaId</th>
                                    <th>Monto/Pagado</th>
                                    <th>ObservaciÃ³n</th>
                                    <th>Fecha</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var pago in PagosFacturaSeleccionada)
                                {
                                    <tr>
                                        <td>@pago.FacturaID</td>
                                        <td>$@pago.MontoPagado.ToString("N2")</td>
                                        <td>@pago.Observacion</td>
                                        <td>@pago.Fecha.ToShortDateString()</td>
                                    </tr>
                                } 
                            </tbody>
                        </table>
                    }
                </div>
                <div class="modal-footer bg-dark text-white d-print-none">
                    
                </div>
            </div>
        </div>
    </div>

    <!-- Mostrar la lista de facturas -->
    <div class="table-container">
        <div class="card col-12">
            <div class="card-body">
                <div class="row">
                    <div class="col-11">
                        <button class="btn btn-outline-primary d-print-none" 
                            @onclick="async ()=>{await PrintPageAsync();}">
                            <span class="oi oi-print"></span>
                        </button>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-8"></div>
                    <div class="col-4">
                        <div class="input-group d-print-none">
                            <input type="text" class="form-control border-0 border-bottom" 
                                placeholder="Buscar por nombre" @bind="FiltroInvoice">
                            <button class="btn btn-outline input-group-text border-0 bg-white" 
                                type="button" id="button-addon2" @onclick="()=>Consultar()">
                                <span class="oi oi-magnifying-glass text-black"></span>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="row-12 mt-2">
                    <table class="table table-striped">
                        <thead class="table" style="background-image: linear-gradient(180deg, rgb(0, 29, 82) 0%, rgb(0, 0, 0) 70%); color: #ffffff;">
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Cliente</th>
                                <th scope="col">Total</th>
                                <th scope="col">ITBIS</th>
                                <th scope="col">Descuento</th>
                                <th scope="col">Importe</th>
                                <th scope="col">Fecha</th>
                                <th scope="col" class="d-print-none">...</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var f in Facturas)
                            {
                                @if(f.TypePayment == "1" || f.SaldoPendiente == 0)    
                                {
                                    <tr>
                                        <th scope="row">@f.Id</th>
                                        <td>@f.Cliente.Nombre @f.Cliente.Apellidos</td>
                                        <td>$@($"{(f.SubTotal - f.ITBIS):N2}")</td>
                                        <td>
                                            <span style="white-space: nowrap;">
                                                $@($"{(f.ITBIS):N2}")
                                            </span>
                                        </td>
                                        <td>$@f.TotalDesc.ToString("N2")</td>
                                        <td><strong>$@($"{(f.SubTotal - f.TotalDesc):N2}")</strong></td>
                                        <td>@f.Fecha.ToShortDateString()</td>
                                        <td>
                                            <div class="button d-print-none">
                                                <button @onclick="() => MostrarPagos(f)"
                                                    class="btn btn-outline-success">
                                                    <span class="oi oi-dollar"></span>
                                                </button>
                                                <button @onclick="() => MostrarDetalles(f)"
                                                    class="btn btn-outline-info">
                                                    <span class="oi oi-info"></span>
                                                </button>
                                                <button @onclick="() => Eliminar(f)" class="btn btn-outline-danger d-print-none" >
                                                    <span class="oi oi-trash"></span>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}

@code
{
    public string TituloForm => ShowDetails == false ?
    "MÃ³dulo de facturas al contado" : "MÃ³dulo de facturaciÃ³n";
    public bool ShowDetails { get; set; } = false;
    public List<FacturaResponse> Facturas { get; set; } = new();
    public List<FacturaDetalleResponse> FacturaDetalles { get; set; } = new();
    public FacturaResponse? SelectedFactura { get; set; } // Factura seleccionada

    private string FormatPhoneNumber(string phoneNumber)
    {
        // Verifica si el nÃºmero telefÃ³nico tiene la longitud esperada
        if (phoneNumber.Length == 10)
        {
            // Formatea el nÃºmero telefÃ³nico
            return $"({phoneNumber.Substring(0, 3)}) {phoneNumber.Substring(3, 3)}-{phoneNumber.Substring(6)}";
        }
        else
        {
            // Devuelve el nÃºmero telefÃ³nico sin cambios si no tiene la longitud esperada
            return phoneNumber;
        }
    }
    private string FormatCustomerId(string customerId)
    {
        // Verifica si el nÃºmero telefÃ³nico tiene la longitud esperada
        if (customerId.Length == 11)
        {
            // Formatea el nÃºmero telefÃ³nico
            return $"{customerId.Substring(0, 3)}-{customerId.Substring(3, 7)}-{customerId.Substring(10)}";
        }
        else
        {
            // Devuelve el nÃºmero telefÃ³nico sin cambios si no tiene la longitud esperada
            return customerId;
        }
    }

    void Back()
    {
        ShowDetails = false;
    }
    async Task Consultar()
    {
        var resultado = await facturaServices.Consultar(FiltroInvoice);
        if (resultado.Success)
        {
            Facturas = resultado.Data?.OrderByDescending(f => f.Fecha).ToList() ?? new List<FacturaResponse>();
        }
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        await Consultar();
        await CargarPagos();
    }

    public async Task Eliminar(FacturaResponse user)
    {
        var resultado = await facturaServices.Eliminar(user.ToRequest());
        if (resultado.Success)
        {
            await Consultar();
            StateHasChanged();
        }
    }
    // MÃ©todo para mostrar detalles de la factura seleccionada
    void MostrarDetalles(FacturaResponse factura)
    {
        SelectedFactura = factura;
        FacturaDetalles = factura.Detalles.ToList();
        ShowDetails = true;
    }
    private async Task PrintPageAsync()
    {

        await JSRuntime.InvokeVoidAsync("printPage");
    }
    
    //Codigo Para mostrar todos los pagos realizados por factura
    public List<PagoResponse> PagosFacturaSeleccionada { get; set; } = new List<PagoResponse>();
    public bool FacturaSinPagos => PagosFacturaSeleccionada.Count == 0;
    public bool MostrarMensajeSinPagos { get; set; } = false;
    public bool detailsPago { get; set; } = false;
    public List<PagoResponse> Pagos { get; set; } = new();
    public FacturaResponse FacturaEnConfirmacion { get; set; } = new();
    public string Filtro { get; set; } = "";
    public string FiltroInvoice { get; set; } = "";
    async Task CargarPagos()
    {
        var resultado =
        await pagoServices.Consultar(Filtro);
        if (resultado.Success)
        {
            Pagos = resultado.Data!;
        }
    }
    void DetailsPago()
    {
        detailsPago = true;
    }
    void CloseDetailsPago()
    {
        detailsPago = false;
    } 
    void MostrarPagos(FacturaResponse factura)
    {
        SelectedFactura = factura;
        FacturaDetalles = factura.Detalles.ToList();
        PagosFacturaSeleccionada = Pagos.Where(p => p.FacturaID == factura.Id).ToList();
        detailsPago = true;
        StateHasChanged(); // AsegÃºrate de llamar a StateHasChanged para actualizar la interfaz de usuario.

    }
}