@page "/inicio"
@using FactuSystem.Data.Response;
@inject IFacturaServices facturaServices;
@attribute [Authorize]


<PageTitle>Inicio</PageTitle>

<div class="container ">
    <h1 class="display-4 text-center text-white" style="background-color: rgb(0, 0, 61); padding: 20px;">
        <i class="fas fa-store-alt"></i> Bienvenido a Mueblería XYZ
    </h1>

    <div class="row mt-5">
        <div class="col-md-6 ">
            <!-- Sección de Estadísticas -->
            <div class="card rounded border border-secondary">
                <img src="3.jpeg" alt="" class="card-img-top" style="height: 200px; object-fit: cover;">
                <div class="card-body">
                    <h2 class="card-title text-success">
                        <i class="fas fa-chart-bar"></i> Estadísticas de Ventas
                    </h2>
                    <p>
                        <b>
                            (@Facturas.Count()) 
                            Ventas del día: ($@Facturas.Sum(c=> c.SubTotal - c.TotalDesc).ToString("N2"))
                        </b>
                    </p>
                    <hr>
                    <p>Contado: (@Facturas.Where(c=> c.TypePayment=="1" || c.SaldoPendiente == 0).Count())</p>
                    <p>Crédito: (@Facturas.Where(c=> c.TypePayment=="2" && c.SaldoPendiente > 0).Count())</p>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <!-- Últimas Facturas -->
            <div class="card rounded border border-secondary">
                <div class="card-body">
                    <div class="card-title text-muted">
                        <h2>
                            <i class="fas fa-file-invoice-dollar"></i> Últimas Facturas 
                        </h2> 
                    </div>
                    <ul class="list-group">
                        @foreach (var factura in Facturas)
                        {
                            <li class="list-group-item list-group-item-action bg-dark text-white border-light mb-2">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <i class="fas fa-user"></i> @factura.Cliente.Nombre @factura.Cliente.Apellidos
                                    </div>
                                    <div>
                                        <strong>Total:</strong> $@factura.SubTotal.ToString("N2")
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    
    public List<FacturaResponse> Facturas { get; set; } = new();
    // Puedes incluir lógica para obtener y mostrar datos relevantes
    public class FacturaTest
    {
        public string Cliente {get; set;}
        public decimal Total {get; set;}
    }
    List<FacturaTest> UltimasFacturas { get; set; }
    async Task Consultar()
    {
        DateTime fechaActual = DateTime.Now.Date; // Obtiene la fecha actual sin la parte de tiempo

        var resultado = await facturaServices.Consultar();
        if (resultado.Success)
        {
            Facturas = resultado.Data?
                .Where(f => f.Fecha.Date == fechaActual) // Filtra por la fecha actual
                .OrderByDescending(f => f.Fecha)
                .ToList() ?? new List<FacturaResponse>();
        }
        StateHasChanged();
    }
    //protected override void OnInitialized()
    protected override async Task OnInitializedAsync()
    {
        await Consultar();
        // Simulación de datos de ejemplo
        //UltimasFacturas = ObtenerUltimasFacturas();
    }

    List<FacturaTest> ObtenerUltimasFacturas()
    {
        // Lógica para obtener las últimas facturas desde tu servicio o base de datos
        // Aquí puedes hacer llamadas a tu servicio de facturación
        // Ejemplo:
        return new List<FacturaTest>
        {
            new FacturaTest { Cliente = "Cliente1", Total = 500 },
            new FacturaTest { Cliente = "Cliente2", Total = 750 },
            new FacturaTest { Cliente = "Cliente3", Total = 1200 },
            new FacturaTest { Cliente = "Cliente4", Total = 1200 },
            new FacturaTest { Cliente = "Cliente5", Total = 1200 },
            new FacturaTest { Cliente = "Cliente6", Total = 1200 },
            new FacturaTest { Cliente = "Cliente7", Total = 1200 },
        };
    }
}